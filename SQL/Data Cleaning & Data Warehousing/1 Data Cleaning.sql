DROP TABLE ADDRESS;
DROP TABLE CATEGORY;
DROP TABLE CUSTOMER;
DROP TABLE CUSTOMER_TYPE;
DROP TABLE EQUIPMENT;
DROP TABLE HIRE;
DROP TABLE SALES;
DROP TABLE STAFF;

CREATE TABLE ADDRESS
AS SELECT *
FROM MONEQUIP.ADDRESS;

CREATE TABLE CATEGORY
AS SELECT *
FROM MONEQUIP.CATEGORY;

CREATE TABLE CUSTOMER
AS SELECT * 
FROM MONEQUIP.CUSTOMER;

CREATE TABLE CUSTOMER_TYPE
AS SELECT *
FROM MONEQUIP.CUSTOMER_TYPE;

CREATE TABLE EQUIPMENT
AS SELECT *
FROM MONEQUIP.EQUIPMENT;

CREATE TABLE HIRE
AS SELECT *
FROM MONEQUIP.HIRE;

CREATE TABLE SALES
AS SELECT *
FROM MONEQUIP.SALES;

CREATE TABLE STAFF
AS SELECT *
FROM MONEQUIP.STAFF;

----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- SEARCHING FOR ERRORS
----------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- SEARCH FOR DUPLICATE PRIMARY KEYS [ERROR 1]:
--------------------------------------------------------------------------------

-- CUSTOMER_TYPE.CUSTOMER_TYPE_ID
SELECT CUSTOMER_TYPE_ID, COUNT(CUSTOMER_TYPE_ID)
FROM CUSTOMER_TYPE
GROUP BY CUSTOMER_TYPE_ID
HAVING COUNT(CUSTOMER_TYPE_ID)>1; 
-- NONE FOUND

-- CUSTOMER.CUSTOMER_ID
SELECT CUSTOMER_ID, COUNT(CUSTOMER_ID)
FROM CUSTOMER
GROUP BY CUSTOMER_ID
HAVING COUNT(CUSTOMER_ID)>1; 
-- COUNT(CUSTOMER_ID=52) = 4 [ERROR 1.1]

-- ADDRESS.ADDRESS_ID
SELECT ADDRESS_ID, COUNT(ADDRESS_ID)
FROM ADDRESS
GROUP BY ADDRESS_ID
HAVING COUNT(ADDRESS_ID)>1; 
-- NONE FOUND

-- HIRE.HIRE_ID
SELECT HIRE_ID, COUNT(HIRE_ID)
FROM HIRE
GROUP BY HIRE_ID
HAVING COUNT(HIRE_ID)>1; 
-- NONE FOUND

-- STAFF.STAFF_ID
SELECT STAFF_ID, COUNT(STAFF_ID)
FROM STAFF
GROUP BY STAFF_ID
HAVING COUNT(STAFF_ID)>1; 
-- NONE FOUND

-- SALES.SALES_ID
SELECT SALES_ID, COUNT(SALES_ID)
FROM SALES
GROUP BY SALES_ID
HAVING COUNT(SALES_ID)>1; 
-- NONE FOUND

-- EQUIPMENT.EQUIPMENT_ID
SELECT EQUIPMENT_ID, COUNT(EQUIPMENT_ID)
FROM EQUIPMENT
GROUP BY EQUIPMENT_ID
HAVING COUNT(EQUIPMENT_ID)>1; 
-- NONE FOUND

-- CATEGORY.CATEGORY_ID
SELECT CATEGORY_ID, COUNT(CATEGORY_ID)
FROM CATEGORY
GROUP BY CATEGORY_ID
HAVING COUNT(CATEGORY_ID)>1; 
-- NONE FOUND

--------------------------------------------------------------------------------
-- SEARCH FOR ILLEGAL FOREIGN KEYS [ERROR 2]:
--------------------------------------------------------------------------------

-- CUSTOMER.CUSTOMER_TYPE_ID
SELECT CUSTOMER_TYPE_ID
FROM CUSTOMER 
WHERE CUSTOMER_TYPE_ID NOT IN 
    (SELECT DISTINCT CUSTOMER_TYPE_ID
     FROM CUSTOMER_TYPE); 
-- NONE FOUND
     
-- HIRE.EQUIPMENT_ID
SELECT EQUIPMENT_ID
FROM HIRE 
WHERE EQUIPMENT_ID NOT IN 
    (SELECT DISTINCT EQUIPMENT_ID
     FROM EQUIPMENT); 
-- HIRE.EQUIPMENT_ID = 190 IS ILLEGAL [ERROR 2.1]
     
-- HIRE.CUSTOMER_ID
SELECT CUSTOMER_ID
FROM HIRE 
WHERE CUSTOMER_ID NOT IN 
    (SELECT DISTINCT CUSTOMER_ID
     FROM CUSTOMER); 
-- HIRE.CUSTOMER_ID = 181 IS ILLEGAL [ERROR 2.2]
     
-- HIRE.STAFF_ID
SELECT STAFF_ID
FROM HIRE 
WHERE STAFF_ID NOT IN 
    (SELECT DISTINCT STAFF_ID
     FROM STAFF); 
-- HIRE.STAFF_ID = 85, 174, 223, 123 ARE ILLEGAL [ERROR 2.3]

-- SALES.EQUIPMENT_ID
SELECT EQUIPMENT_ID
FROM SALES 
WHERE EQUIPMENT_ID NOT IN 
    (SELECT EQUIPMENT_ID
     FROM EQUIPMENT); 
-- NONE FOUND
     
-- SALES.CUSTOMER_ID
SELECT CUSTOMER_ID
FROM SALES 
WHERE CUSTOMER_ID NOT IN 
    (SELECT CUSTOMER_ID
     FROM CUSTOMER); 
-- NONE FOUND
     
-- SALES.STAFF_ID
SELECT STAFF_ID
FROM SALES 
WHERE STAFF_ID NOT IN 
    (SELECT STAFF_ID
     FROM STAFF); 
-- NONE FOUND

-- EQUIPMENT.CATEGORY_ID
SELECT CATEGORY_ID
FROM EQUIPMENT
WHERE CATEGORY_ID NOT IN
    (SELECT CATEGORY_ID
     FROM CATEGORY); 
-- NONE FOUND

--------------------------------------------------------------------------------
-- SEARCH FOR ILLEGAL DATES [ERROR 3]:
--------------------------------------------------------------------------------

-- HIRE (START_DATE TAKES PLACE AFTER END_DATE)
SELECT HIRE_ID, START_DATE, END_DATE
FROM HIRE
WHERE TO_CHAR(START_DATE, 'YYYYMMDD') > TO_CHAR(END_DATE, 'YYYYMMDD'); 
-- HIRE_ID = 302 ENDS BEFORE IT BEGINS [ERROR 3.1.1]
-- HIRE_ID = 305 ENDS BEFORE IT BEGINS [ERROR 3.1.2]

-- HIRE (EQUIPMENT IS HIRED BEFORE IT IS MANUFACTURED)
SELECT EQUIPMENT.EQUIPMENT_ID, EQUIPMENT.MANUFACTURE_YEAR, HIRE.START_DATE AS DATE_HIRED
FROM EQUIPMENT,HIRE
WHERE EQUIPMENT.EQUIPMENT_ID = HIRE.EQUIPMENT_ID(+)
AND TO_CHAR(HIRE.START_DATE, 'YYYY')<EQUIPMENT.MANUFACTURE_YEAR; 
-- HIRE_ID = 303 STARTS BEFORE EQUIPMENT_ID = 43 IS MANUFACTURED [ERROR 3.2.1]
-- HIRE_ID = 303'S END_DATE IS IS ~10 YEARS AFTER START_DATE; SHOULD BE 2 DAYS AFTER [ERROR 3.2.2]

-- SALES (EQUIPMENT IS SOLD BEFORE IT IS MANUFACTURED)
SELECT EQUIPMENT.EQUIPMENT_ID, SALES.SALES_DATE
FROM EQUIPMENT,SALES
WHERE SALES.EQUIPMENT_ID(+) = EQUIPMENT.EQUIPMENT_ID
AND TO_CHAR(SALES.SALES_DATE, 'YYYY')<EQUIPMENT.MANUFACTURE_YEAR; 
-- NONE FOUND

--------------------------------------------------------------------------------
-- SEARCH FOR MISCLASSIFIED DATA [ERROR 4]:
--------------------------------------------------------------------------------

-- EQUIPMENT (EQUIPMENT_ID = 15 IS DESCRIBED AS NULL)
SELECT EQUIPMENT.EQUIPMENT_ID, EQUIPMENT.CATEGORY_ID, CATEGORY.CATEGORY_DESCRIPTION 
FROM EQUIPMENT, CATEGORY 
WHERE EQUIPMENT.CATEGORY_ID = CATEGORY.CATEGORY_ID
AND EQUIPMENT.EQUIPMENT_ID = 
    (SELECT EQUIPMENT_ID -- SELECT THE EQUIPMENT_ID OF THE EQUIPMENT WITH CATEGORY_ID = 15
     FROM EQUIPMENT
     WHERE CATEGORY_ID IN
        (SELECT CATEGORY_ID -- SELECT CATEGORY_ID = 15, WHICH HAS A CATEGORY_DESCRIPTION = NULL
         FROM CATEGORY
         WHERE CATEGORY_DESCRIPTION = 'null')); 
-- EQUIPMENT_ID = 158 IS MISCLASSIFIED (SHOULD HAVE CATEGORY_ID = 5) [ERROR 4.1] 
-- CATEGORY_ID = 15 IS DESCRIBED AS NULL [ERROR 4.2]

--------------------------------------------------------------------------------        
-- SEARCH FOR MISCALCULATED DATA [ERROR 5]:
--------------------------------------------------------------------------------

-- HIRE (MISCALCULATED TOTAL_HIRE_PRICE FOR >1 DAY)
SELECT COUNT(*)
FROM HIRE
WHERE TOTAL_HIRE_PRICE <> (END_DATE - START_DATE) * QUANTITY * UNIT_HIRE_PRICE
AND END_DATE-START_DATE <> 0;
-- 168 TOTAL_HIRE_PRICES ARE MISCALCULATED FOR >1 DAY [ERROR 5.1]

-- HIRE (MISCALCULATED TOTAL_HIRE_PRICE FOR <1 DAY)
SELECT COUNT(*)
FROM HIRE
WHERE TOTAL_HIRE_PRICE <> (END_DATE - START_DATE) * QUANTITY * UNIT_HIRE_PRICE * 0.5
AND END_DATE-START_DATE = 0;
-- 62 TOTAL_HIRE_PRICES ARE MISCALCULATED FOR <1 DAY [ERROR 5.2]

-- SALES (NEGATIVE TOTAL_SALES_PRICE)
SELECT * FROM SALES
WHERE TOTAL_SALES_PRICE<0; 
-- NONE FOUND

-- SALES (WRONGLY CALCULATED TOTAL_SALES_PRICE)
SELECT * FROM SALES
WHERE TOTAL_SALES_PRICE <> QUANTITY * UNIT_SALES_PRICE; 
-- SALES_ID = 151 HAS THE WRONG QUANTITY (SHOULD BE 4) [ERROR 5.3]

----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- CLEANING THE DATA
----------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- RECTIFYING ERROR 1
--------------------------------------------------------------------------------

-- COUNT(CUSTOMER_ID=52) = 4 [ERROR 1.1]
DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER
AS SELECT DISTINCT * 
FROM MONEQUIP.CUSTOMER;
-- DROP AND REINITIALISE CUSTOMER WITH ONLY DISTINCT ROWS

--------------------------------------------------------------------------------
-- RECTIFYING ERROR 2
--------------------------------------------------------------------------------

-- HIRE.EQUIPMENT_ID = 190 IS ILLEGAL [ERROR 2.1]
UPDATE HIRE 
SET EQUIPMENT_ID = 1
WHERE EQUIPMENT_ID = 190;
-- REPLACE THE ILLEGAL EQUIPMENT_ID WITH 1, A PLACEHOLDER (TO ENSURE LOSSLESS JOINS IN THE FUTURE)

-- HIRE.CUSTOMER_ID = 181 IS ILLEGAL [ERROR 2.2]
UPDATE HIRE
SET CUSTOMER_ID = 1
WHERE CUSTOMER_ID = 181;
-- REPLACE THE ILLEGAL CUSTOMER_ID WITH 1, A PLACEHOLDER (TO ENSURE LOSSLESS JOINS IN THE FUTURE)

-- HIRE.STAFF_ID = 85, 174, 223, 123 ARE ILLEGAL [ERROR 2.3]
UPDATE HIRE
SET STAFF_ID = 1
WHERE STAFF_ID IN (85, 174, 223, 123);
-- REPLACE THE ILLEGAL STAFF_ID WITH 1, A PLACEHOLDER (TO ENSURE LOSSLESS JOINS IN THE FUTURE)

--------------------------------------------------------------------------------
-- RECTIFYING ERROR 3
--------------------------------------------------------------------------------

-- HIRE_ID = 302 ENDS BEFORE IT BEGINS [ERROR 3.1.1]
UPDATE HIRE
SET END_DATE = TO_DATE('07-DECEMBER-2020', 'DD-MONTH-YYYY')
WHERE HIRE_ID = 302;
-- SET THE END_DATE TO 2 DAYS AFTER THE START_DATE IN LINE WITH THE OTHER ROWS

-- HIRE_ID = 305 ENDS BEFORE IT BEGINS [ERROR 3.1.2]
UPDATE HIRE
SET START_DATE = TO_DATE('19-DECEMBER-2020', 'DD-MONTH-YYYY'),
END_DATE = TO_DATE('25-DECEMBER-2020', 'DD-MONTH-YYYY')
WHERE HIRE_ID = 305;
-- INTERCHANGE THE START_DATE AND END_DATE

-- HIRE_ID = 303 STARTS BEFORE EQUIPMENT_ID = 43 IS MANUFACTURED [ERROR 3.2.1]
-- HIRE_ID = 303'S END_DATE IS IS ~10 YEARS AFTER START_DATE; SHOULD BE 2 DAYS AFTER [ERROR 3.2.2]
UPDATE HIRE
SET START_DATE = TO_DATE('25JAN2019', 'DDMONYYYY'),
END_DATE = TO_DATE('27JAN2019', 'DDMONYYYY')
WHERE HIRE_ID = 303;
-- SET THE START_DATE AND END_DATE 2 DAYS APART IN 2019 IN LINE WITH THE OTHER ROWS


--------------------------------------------------------------------------------
-- RECTIFYING ERROR 4
--------------------------------------------------------------------------------

-- EQUIPMENT_ID = 158 IS MISCLASSIFIED (SHOULD HAVE CATEGORY_ID = 5) AS CATEGORY_ID = 15 IS DESCRIBED AS NULL [ERROR 4.1]
UPDATE EQUIPMENT
SET CATEGORY_ID = 5
WHERE CATEGORY_ID = 15;
-- CHANGE THE CATEGORY_ID TO 5

-- RECREATE CATEGORY WITHOUT THE INCORRECT CATEGORY
DROP TABLE CATEGORY;

CREATE TABLE CATEGORY AS
SELECT * FROM MONEQUIP.CATEGORY
WHERE MONEQUIP.CATEGORY.CATEGORY_ID <> 15;

--------------------------------------------------------------------------------
-- RECTIFYING ERROR 5
--------------------------------------------------------------------------------

-- 168 TOTAL_HIRE_PRICES ARE MISCALCULATED FOR >1 DAY [ERROR 5.1]
-- 62 TOTAL_HIRE_PRICES ARE MISCALCULATED FOR <1 DAY [ERROR 5.2]
DROP TABLE TEMP;

CREATE TABLE TEMP AS -- CREATE A TEMPORARY TABLE
SELECT HIRE.*, END_DATE-START_DATE AS DAYS
FROM HIRE;

UPDATE TEMP -- WHEN AN ITEM IS RETURNED ON THE DAY IT IS HIRED, THE CUSTOMER ONLY PAYS 50% OF THE AGREED UPON PRICE
SET DAYS = 0.5
WHERE DAYS = 0;

UPDATE TEMP -- RECALCULATE THE TOTAL_HIRE_PRICE
SET TOTAL_HIRE_PRICE = DAYS * UNIT_HIRE_PRICE * QUANTITY;

DROP TABLE HIRE;

CREATE TABLE HIRE AS -- RECREATE THE HIRE TABLE WITH THE CORRECT TOTAL_HIRE_PRICE
SELECT HIRE_ID, START_DATE, END_DATE, EQUIPMENT_ID, QUANTITY, UNIT_HIRE_PRICE, TOTAL_HIRE_PRICE,CUSTOMER_ID, STAFF_ID
FROM TEMP;

DROP TABLE TEMP;

-- SALES_ID = 151 HAS THE WRONG QUANTITY (SHOULD BE 4) [ERROR 5.3]
UPDATE SALES
SET QUANTITY= 4
WHERE SALES_ID = 151;
-- CHANGE THE QUANTITY TO 4 (TOTAL_SALES_PRICE / UNIT_SALES_PRICE)

COMMIT;